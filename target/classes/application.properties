server.port=5000
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url= jdbc:postgresql://localhost:5432/database4
spring.datasource.username=postgres
spring.datasource.password=saida123
spring.batch.initialize-schema=always
spring.datasource.initialization-mode=always
spring.jpa.hibernate.ddl-auto=update
spring.jackson.serialization.fail-on-empty-beans=false
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.show_sql=false
logging.level.org.hibernate.SQL= DEBUG
spring.batch.job.enabled=false
#######################################################"
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
batch.jdbc.driver=org.postgresql.Driver
batch.jdbc.url=jdbc:postgresql://localhost:5432/database3
batch.jdbc.user=postgres
batch.jdbc.password=dba
batch.database.incrementer.class=org.springframework.jdbc.support.incrementer.PostgresSequenceMaxValueIncrementer
batch.schema.script=classpath:/org/springframework/batch/core/schema-postgresql.sql
batch.drop.script=classpath:/org/springframework/batch/core/schema-drop-postgresql.sql
batch.jdbc.testWhileIdle=false
batch.jdbc.validationQuery=


# Non-platform dependent settings that you might like to change
batch.data.source.init=true
batch.table.prefix=BATCH_
file.upload-dir=C:/Users/Dell  E 6420/Desktop/upload


